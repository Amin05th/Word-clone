<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <script src="//cdn.quilljs.com/1.3.6/quill.js"></script>
    <script src="//cdn.quilljs.com/1.3.6/quill.min.js"></script>
    <link href="//cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <link href="//cdn.quilljs.com/1.3.6/quill.bubble.css" rel="stylesheet">
    <script defer src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
    <title>Microsoft Word</title>
</head>
<body>
    <div id="editor" class ="Container"></div>
    
</body>
    <script type = "module">
        import { io } from "https://cdn.socket.io/4.3.2/socket.io.esm.min.js";

        const toolbarOptions = [
            ['bold', 'italic', 'underline', 'strike'],        
            ['blockquote', 'code-block'],

            [{ 'header': 1 }, { 'header': 2 }],               
            [{ 'list': 'ordered'}, { 'list': 'bullet' }],
            [{ 'script': 'sub'}, { 'script': 'super' }],      
            [{ 'indent': '-1'}, { 'indent': '+1' }],          
            [{ 'direction': 'rtl' }],                         

            [{ 'size': ['small', false, 'large', 'huge'] }],
            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

            [{ 'color': [] }, { 'background': [] }],
            [{ 'font': [] }],
            [{ 'align': [] }],

            ['clean']
            ];


        const quill = new Quill('#editor', {theme: "snow", modules: {toolbar:toolbarOptions}})
        const socket = io("http://localhost:3002/")

        socket.on("connect", () => {

            const TextChangeHandler = (delta, OldDelta, source) => {
                if(delta == null) return
                if(source !== 'user') return
                socket.emit("Changed-Text", delta)
                setInterval(() => socket.emit('save-document', quill.getContents()), 2000)
            }

            const Updatehandler = delta => {
                if(delta == null) return
                quill.updateContents(delta)
            }

            socket.on("Broadcast-changed-changes", Updatehandler)
            quill.on("text-change", TextChangeHandler)
            socket.emit('Send-Paramcode', '<%= Params %>')
            socket.on('send-database-data', databasedata => {
                quill.setText(databasedata)
            })
        })

    </script>
</html>